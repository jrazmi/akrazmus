type Query {
    user(id: ID, email: String):User
    users(input: UsersInput): UsersResults!
}

type User {
    id: ID
    email: String
    first_name: String
    last_name: String
    deleted: Boolean
    globalPermissions: [GlobalPermissionEnum]
    createdAt: GraphQLDateTime
    updatedAt: GraphQLDateTime
}
type UsersResults {
    hasMore: Boolean!
    totalCount: Int!
    items: [User]!
}

input UsersInput {
    where: UsersWhere
    limit: Int
    offset: Int
    sort: UserSort
}

input UsersWhere {
    OR: [UsersWhere]
    AND: [UsersWhere]
    id: StringWhere
    first_name: StringWhere
    deleted: BooleanWhere
}
input UserSort {
    id: SortDirection
}

enum GlobalPermissionEnum {
    ADMIN
}
